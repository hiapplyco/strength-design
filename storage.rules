rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidFile() {
      // Max file size: 10MB
      return request.resource.size < 10 * 1024 * 1024;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') && isValidFile();
    }
    
    function isValidDocument() {
      return request.resource.contentType in [
        'application/pdf',
        'application/msword',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'text/csv',
        'text/plain'
      ] && isValidFile();
    }
    
    function isValidAudio() {
      return request.resource.contentType.matches('audio/.*') && 
             request.resource.size < 50 * 1024 * 1024; // 50MB for audio
    }
    
    function isValidVideo() {
      return request.resource.contentType.matches('video/.*') && 
             request.resource.size < 100 * 1024 * 1024; // 100MB for video
    }
    
    // Workout uploads
    match /workout-uploads/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && (isValidImage() || isValidDocument());
      allow delete: if isOwner(userId);
    }
    
    // Nutrition uploads
    match /nutrition-uploads/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && (isValidImage() || isValidDocument());
      allow delete: if isOwner(userId);
    }
    
    // Video uploads
    match /videos/{userId}/{videoId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && isValidVideo();
      allow delete: if isOwner(userId);
    }
    
    // Photo uploads (progress photos, etc.)
    match /photos/{userId}/{photoId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && isValidImage();
      allow delete: if isOwner(userId);
    }
    
    // Voice recordings
    match /voice-recordings/{userId}/{workoutId}/{recordingId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && isValidAudio();
      allow delete: if isOwner(userId);
    }
    
    // Profile pictures
    match /profile-pictures/{userId}/{fileName} {
      allow read: if isAuthenticated(); // Others can see profile pictures
      allow write: if isOwner(userId) && isValidImage();
      allow delete: if isOwner(userId);
    }
    
    // Shared content (publicly accessible with link)
    match /shared/{shareId}/{fileName} {
      allow read: if true; // Public access
      allow write: if false; // Only through Cloud Functions
    }
    
    // Admin uploads
    match /admin/{path=**} {
      allow read, write: if request.auth.token.admin == true;
    }

    // Publicly accessible exercise data
    match /exercises.json {
      allow read: if true;
      allow write: if request.auth.token.admin == true; // Only admins can overwrite
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}