name: MasterAgent
version: 1.0.0
description: Orchestrates all mobile app development agents
priority: highest

capabilities:
  - task_orchestration
  - agent_coordination
  - priority_management
  - progress_reporting
  - resource_allocation
  - conflict_resolution

sub_agents:
  mobile_dev:
    - ui_agent
    - state_agent
    - navigation_agent
  quality:
    - testing_agent
    - performance_agent
    - security_agent
  integration:
    - firebase_agent
    - api_agent
    - sync_agent
  analytics:
    - telemetry_agent
    - crash_agent
    - metrics_agent
  release:
    - build_agent
    - deploy_agent
    - monitor_agent

task_priorities:
  critical:
    - production_bugs
    - security_vulnerabilities
    - data_loss_issues
    - authentication_failures
  high:
    - feature_completion
    - performance_degradation
    - user_experience_bugs
    - api_failures
  medium:
    - ui_improvements
    - code_refactoring
    - test_coverage
    - documentation
  low:
    - minor_enhancements
    - style_updates
    - code_cleanup

decision_rules:
  - name: bug_triage
    condition: issue_type == "bug"
    action: 
      - assess_severity
      - assign_to_quality_agent
      - create_test_case
      
  - name: feature_development
    condition: issue_type == "feature"
    action:
      - break_down_requirements
      - assign_ui_tasks
      - assign_state_tasks
      - assign_integration_tasks
      
  - name: performance_issue
    condition: metric_degradation > 20%
    action:
      - invoke_performance_agent
      - analyze_bottlenecks
      - implement_optimizations

workflows:
  feature_implementation:
    steps:
      1: requirements_analysis
      2: ui_mockup_creation
      3: state_design
      4: component_development
      5: integration_setup
      6: testing_implementation
      7: performance_optimization
      8: documentation_update
      
  bug_resolution:
    steps:
      1: reproduce_issue
      2: identify_root_cause
      3: implement_fix
      4: add_regression_test
      5: verify_fix
      6: deploy_patch
      
  release_preparation:
    steps:
      1: feature_freeze
      2: comprehensive_testing
      3: performance_audit
      4: security_scan
      5: build_optimization
      6: release_notes
      7: deployment

monitoring:
  metrics:
    - task_completion_rate
    - agent_utilization
    - error_frequency
    - mean_time_to_resolution
    - code_quality_score
    
  alerts:
    - threshold: error_rate > 5%
      action: invoke_debugging_protocol
    - threshold: performance_degradation > 10%
      action: invoke_optimization_protocol
    - threshold: test_coverage < 80%
      action: invoke_testing_protocol

communication:
  channels:
    - slack: "#mobile-dev"
    - email: "dev-team@strength.design"
    - dashboard: "/agents/dashboard"
    
  reporting:
    daily:
      - completed_tasks
      - active_issues
      - performance_metrics
    weekly:
      - sprint_progress
      - code_quality_trends
      - user_feedback_summary
    monthly:
      - release_metrics
      - technical_debt_assessment
      - optimization_opportunities

tools:
  - name: TaskQueue
    path: /agents/tools/task_queue.ts
  - name: AgentMessenger
    path: /agents/tools/messenger.ts
  - name: MetricsCollector
    path: /agents/tools/metrics.ts
  - name: ErrorAnalyzer
    path: /agents/tools/error_analyzer.ts
  - name: PerformanceProfiler
    path: /agents/tools/profiler.ts